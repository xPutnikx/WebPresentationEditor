// Generated by CoffeeScript 1.3.3
/*
@author Tantaman
*/

define(["./ComponentView"], function(ComponentView) {
  var svgScale;
  svgScale = function(e, deltas) {
    var height, offset, width;
    offset = this.$el.offset();
    width = (deltas.x - offset.left) / this.dragScale;
    height = (deltas.y - offset.top) / this.dragScale;
    this.$el.css({
      width: width,
      height: height
    });
    return this.model.set("scale", {
      width: width,
      height: height
    });
  };
  return ComponentView.extend({
    className: "component imageView",
    tagName: "div",
    initialize: function() {
      ComponentView.prototype.initialize.apply(this, arguments);
      if (this.model.get("imageType") === "SVG") {
        return this.scale = svgScale;
      }
    },
    _finishRender: function($img) {
      var height, naturalHeight, naturalWidth, scale, width;
      if (this.model.get("imageType") === "SVG") {
        $img.css({
          width: "100%",
          height: "100%"
        });
        naturalWidth = $img[0].naturalWidth;
        naturalHeight = $img[0].naturalHeight;
        scale = this.model.get("scale");
        if (scale) {
          this.$el.css({
            width: scale.width,
            height: scale.height
          });
        } else {
          width = Math.max(naturalWidth, 50);
          height = Math.max(naturalHeight, 50);
          this.$el.css({
            width: width,
            height: height
          });
          this.model.set("scale", {
            width: width,
            height: height
          });
        }
      }
      $img.bind("dragstart", function(e) {
        e.preventDefault();
        return false;
      });
      this.$el.find(".content").append($img);
      return this.$el.css({
        top: this.model.get("y"),
        left: this.model.get("x")
      });
    },
    render: function() {
      var $img,
        _this = this;
      ComponentView.prototype.render.call(this);
      $img = $("<img src=" + (this.model.get('src')) + "></img>");
      $img.load(function() {
        return _this._finishRender($img);
      });
      $img.error(function() {
        return _this.remove();
      });
      return this.$el;
    }
  });
});
